{"version":3,"sources":["components/BottomNavBar.js","components/Loading.js","pages/HomePage.js","pages/NotFound.js","pages/TestPage.js","components/LanguageSetting.js","redux/themeType.js","components/DarkModeSetting.js","pages/SettingPage.js","components/QRCodeInput.js","pages/QRCodesGenerator.js","App.js","i18n.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","appBar","top","bottom","margin","padding","backgroundColor","toolBar","width","height","bng","toolBarNone","bna","BottomNavBar","classes","t","useTranslation","useState","value","setValue","location","useLocation","useEffect","pathname","Fragment","AppBar","position","color","className","Toolbar","BottomNavigation","BottomNavigationAction","label","icon","component","Link","to","theme","backdrop","zIndex","drawer","Loading","Backdrop","open","CircularProgress","HomePage","Container","maxWidth","CssBaseline","NotFound","TestPage","root","h","display","select","float","fontSize","LanguageSetting","i18n","lang","language","NativeSelect","onChange","e","target","changeLanguage","then","defaultValue","Divider","type","localStorage","getItem","themeType","createSlice","name","initialState","reducers","setLight","state","setDark","actions","typeValue","switch","DarkModeSetting","switchState","useSelector","checked","setChecked","dispatch","useDispatch","Switch","setItem","SettingPage","card","cardContent","textAlign","qrcode","radiosCard","radios","alignItems","inputCard","input","marginTop","marginBottom","QRCodeInput","props","content","setContent","radioValue","setRadioValue","Card","FormControl","RadioGroup","row","FormControlLabel","control","Radio","TextField","hidden","id","variant","fullWidth","multiline","size","handleQrValue","QRCodesGenerator","qrValue","setQrValue","CardContent","renderAs","App","createTheme","palette","fallback","ThemeProvider","exact","path","use","initReactI18next","Backend","LanguageDetector","init","fallbackLng","debug","interpolation","escapeValue","configureStore","reducer","typeReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.eb54953c.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {AppBar, BottomNavigation, BottomNavigationAction, makeStyles, Toolbar} from '@material-ui/core';\nimport {useLocation, Link} from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport {useTranslation} from 'react-i18next';\n// style fix it bottom\nconst useStyles = makeStyles(() => ({\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        margin: 0,\n        padding: 0,\n        backgroundColor: 'transparent',\n    },\n    toolBar: {\n        width: '100%',\n        height: '100%',\n        padding: 0,\n        margin: 0,\n        backgroundColor: 'transparent',\n    },\n    bng: {\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n    },\n    toolBarNone: {},\n    bna: {},\n}))\n\n// bottom navigation bar, use to change route\nfunction BottomNavBar() {\n    const classes = useStyles();\n    const {t} = useTranslation();\n    // useState to control bottom navigation action`s state\n    const [value, setValue] = useState(0);\n    // get route pathname\n    let location = useLocation();\n\n    // useEffect when location changed,change bna`s state\n    useEffect(() => {\n        switch (location.pathname) {\n            case '/':\n                setValue(0);\n                break;\n            case '/qrcode':\n                setValue(1);\n                break;\n            case '/test':\n                setValue(2);\n                break;\n            case '/setting':\n                setValue(3);\n                break;\n            default:\n                setValue(0);\n        }\n    }, [location]);\n\n    return (\n        <React.Fragment>\n            <AppBar\n                position=\"fixed\"\n                color=\"primary\"\n                className={classes.appBar}>\n                <Toolbar className={classes.toolBar}>\n                    <BottomNavigation\n                        value={value}\n                        className={classes.bng}>\n                        <BottomNavigationAction label={t('bottom.home')} icon={<HomeIcon/>} component={Link}\n                                                to=\"/\"/>\n                        <BottomNavigationAction label={t('bottom.qrcode')} icon={<CenterFocusStrongIcon/>} component={Link}\n                                                to=\"/qrcode\"/>\n                        <BottomNavigationAction label={t('bottom.test')} icon={<BugReportIcon/>} component={Link}\n                                                to=\"/test\"/>\n                        <BottomNavigationAction label={t('bottom.setting')} icon={<SettingsIcon/>} component={Link}\n                                                to=\"/setting\"/>\n                    </BottomNavigation>\n                </Toolbar>\n            </AppBar>\n            <Toolbar className={classes.toolBarNone}/>\n        </React.Fragment>\n    );\n}\n\nexport default BottomNavBar;\n","import React from 'react';\nimport {Backdrop, CircularProgress, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.color,\n    },\n}))\n\n// suspense fallback loading page\nfunction Loading() {\n    const classes = useStyles();\n    return (\n        <Backdrop open={true} className={classes.backdrop}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n    );\n}\n\nexport default Loading;\n","import React, {Fragment} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport {useTranslation} from 'react-i18next';\n\n// homepage\nfunction HomePage() {\n    const {t} = useTranslation();\n    return (\n        <Fragment>\n            <Container maxWidth={\"sm\"}>\n                <CssBaseline/>\n                    <h1>{t('home.title')}</h1>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default HomePage;\n","import React, {Fragment} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\n// not found\nfunction NotFound() {\n    return (\n        <Fragment>\n            <Container maxWidth={\"sm\"}>\n                <CssBaseline/>\n                    <h1>404 NOT FOUND</h1>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default NotFound;\n","import React, {Fragment} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport {useTranslation} from 'react-i18next';\n\n// test page\nfunction TestPage() {\n    const {t} = useTranslation();\n    return (\n        <Fragment>\n            <Container maxWidth={\"sm\"}>\n                <CssBaseline/>\n                    <h1>{t('test.title')}</h1>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default TestPage;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport NativeSelect from '@material-ui/core/NativeSelect'\nimport Divider from '@material-ui/core/Divider';\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {},\n    h: {\n        display: \"inline\",\n    },\n    select: {\n        float: \"right\",\n        fontSize: \"large\",\n    },\n}));\n\n// change language\nfunction LanguageSetting() {\n    const classes = useStyles();\n    const {t, i18n} = useTranslation();\n    let lang = i18n.language;\n    const handleSelect = (e) => {\n        let lang = e.target.value\n        i18n.changeLanguage(lang).then()\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <h1 className={classes.h}>\n                <LanguageIcon/> {t('setting.languages')}\n            </h1>\n            <NativeSelect\n                className={classes.select}\n                onChange={handleSelect}\n                defaultValue={lang}\n            >\n                <option value=\"zh\">中文</option>\n                <option value=\"en\">English</option>\n            </NativeSelect>\n            <Divider/>\n        </div>\n    );\n}\n\nexport default LanguageSetting;\n","import {createSlice} from '@reduxjs/toolkit';\n\nlet type = localStorage.getItem('type');\nif (!type) {\n    type = 'light'\n}\n\nexport const themeType = createSlice({\n    name: 'type',\n    initialState: {\n        value: type\n    },\n    reducers: {\n        setLight: state => {\n            state.value = 'light'\n        },\n        setDark: state => {\n            state.value = 'dark'\n        },\n    }\n});\n\nexport const {setLight, setDark} = themeType.actions;\n\nexport const typeValue = state => state.type.value;\n\nexport default themeType.reducer;\n","import React, {useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport BrightnessMediumIcon from '@material-ui/icons/BrightnessMedium';\nimport {useTranslation} from 'react-i18next';\nimport Divider from '@material-ui/core/Divider';\nimport Switch from '@material-ui/core/Switch';\nimport {setLight, setDark, typeValue} from '../redux/themeType';\nimport {useDispatch, useSelector} from 'react-redux';\n\nconst useStyles = makeStyles(() => ({\n    root: {},\n    h: {\n        display: 'inline'\n    },\n    switch: {\n        float: 'right',\n        fontSize: 'large'\n    },\n}));\n\n// switch dark mode or light mode\nfunction DarkModeSetting() {\n    const type = useSelector(typeValue);\n    let switchState;\n    switch (type) {\n        case 'light':\n            switchState = false;\n            break;\n        case 'dark':\n            switchState = true;\n            break;\n        default:\n            switchState = false;\n    }\n    const [checked, setChecked] = useState(switchState);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const {t} = useTranslation();\n\n    const handleSwitchChanged = () => {\n        if (checked) {\n            setChecked(false);\n            dispatch(setLight());\n            localStorage.setItem('type', 'light');\n        } else {\n            setChecked(true);\n            dispatch(setDark());\n            localStorage.setItem('type', 'dark');\n        }\n    };\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <h1 className={classes.h}>\n                <BrightnessMediumIcon/> {t('setting.dark-mode')}\n                <Switch\n                    className={classes.switch}\n                    checked={checked}\n                    onChange={handleSwitchChanged}\n                    color=\"primary\"\n                />\n            </h1>\n            <Divider/>\n        </div>\n    );\n}\n\nexport default DarkModeSetting;\n","import React, {Fragment} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport LanguageSetting from '../components/LanguageSetting';\nimport DarkModeSetting from '../components/DarkModeSetting';\n\n// setting page\nfunction SettingPage() {\n    return (\n        <Fragment>\n            <CssBaseline/>\n            <Container maxWidth=\"sm\">\n                <LanguageSetting/>\n                <DarkModeSetting/>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default SettingPage;\n","import React, {useState} from 'react';\nimport Card from '@material-ui/core/Card';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(() => ({\n    card: {},\n    cardContent: {\n        textAlign: 'center',\n    },\n    qrcode: {},\n    radiosCard: {},\n    radios: {\n        width: '100%',\n        alignItems: 'center',\n    },\n    inputCard: {\n        textAlign: 'center',\n    },\n    input: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        width: '100%',\n    },\n}));\n\nfunction QRCodeInput(props) {\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [radioValue, setRadioValue] = useState('text');\n    const handleTextContentChange = (e) => {\n        setContent(e.target.value);\n        props.handleQrValue(e.target.value)\n    };\n    const handleRadioChange = (e) => {\n        setRadioValue(e.target.value)\n    }\n\n    return (\n        <div>\n            <Card className={classes.radiosCard}>\n                <FormControl component=\"fieldset\" className={classes.radios}>\n                    <RadioGroup\n                        row aria-label=\"choose type\"\n                        name=\"type\"\n                        defaultValue=\"text\"\n                        value={radioValue}\n                        onChange={handleRadioChange}\n                    >\n                        <FormControlLabel\n                            value=\"text\"\n                            control={<Radio color=\"primary\"/>}\n                            label=\"Text\"\n                        />\n                        <FormControlLabel\n                            value=\"wifi\"\n                            control={<Radio color=\"primary\"/>}\n                            label=\"WIFI\"\n                        />\n                        <FormControlLabel\n                            value=\"file\"\n                            control={<Radio color=\"primary\"/>}\n                            label=\"FILE\"\n                        />\n                        <FormControlLabel\n                            value=\"pic\"\n                            control={<Radio color=\"primary\"/>}\n                            label=\"PIC\"\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </Card>\n            <Divider/>\n            <Card className={classes.inputCard}>\n                <FormControl className={classes.input}>\n                    {radioValue === 'text' ? (<TextField\n                        hidden={true}\n                        id=\"content\"\n                        label=\"Content\"\n                        variant=\"outlined\"\n                        value={content}\n                        fullWidth\n                        multiline\n                        size=\"medium\"\n                        onChange={handleTextContentChange}\n                    />) : null}\n                    {radioValue === 'wifi' ? (<h1>wifi</h1>) : null}\n                    {radioValue === 'file' ? (<h1>file</h1>) : null}\n                    {radioValue === 'pic' ? (<h1>pic</h1>) : null}\n                </FormControl>\n            </Card>\n        </div>\n    );\n}\n\nexport default QRCodeInput;\n","import React, {Fragment, useState} from 'react';\nimport QRCode from 'qrcode.react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport {makeStyles} from '@material-ui/core';\nimport QRCodeInput from '../components/QRCodeInput';\n\nconst useStyles = makeStyles(() => ({\n    card: {},\n    cardContent: {\n        textAlign: 'center',\n    },\n    qrcode: {},\n    radiosCard: {},\n    radios: {\n        width: '100%',\n        alignItems: 'center',\n    },\n    inputCard: {\n        textAlign: 'center',\n    },\n    input: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        width: '100%',\n    },\n}));\n\nfunction QRCodesGenerator() {\n    const classes = useStyles();\n    const [qrValue, setQrValue] = useState('');\n    const handleQrValue = (content) => {\n        setQrValue(content)\n    }\n    return (\n        <Fragment>\n            <Container maxWidth={\"sm\"}>\n                <CssBaseline/>\n                <Card>\n                    <CardContent className={classes.cardContent}>\n                        <QRCode\n                            className={classes.qrcode}\n                            value={qrValue}\n                            size={150}\n                            renderAs=\"svg\"\n                        />\n                    </CardContent>\n                </Card>\n                <Divider/>\n                <QRCodeInput handleQrValue={handleQrValue}/>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default QRCodesGenerator;\n","import React, {Suspense} from 'react';\nimport BottomNavBar from './components/BottomNavBar';\nimport Loading from './components/Loading';\nimport {Switch, Route} from 'react-router-dom';\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\nimport HomePage from './pages/HomePage';\nimport NotFound from './pages/NotFound';\nimport TestPage from './pages/TestPage';\nimport SettingPage from './pages/SettingPage';\nimport {useSelector} from 'react-redux';\nimport {typeValue} from './redux/themeType';\nimport QRCodesGenerator from \"./pages/QRCodesGenerator\";\n\nfunction App() {\n    const type = useSelector(typeValue)\n    const theme = createTheme({\n        palette: {\n            type: type\n        }\n    })\n    return (\n        <Suspense fallback={<Loading/>}>\n            <ThemeProvider theme={theme}>\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage}/>\n                    <Route exact path=\"/test\" component={TestPage}/>\n                    <Route exact path=\"/qrcode\" component={QRCodesGenerator}/>\n                    <Route exact path=\"/setting\" component={SettingPage}/>\n                    <Route exact component={NotFound}/>\n                </Switch>\n                <BottomNavBar/>\n            </ThemeProvider>\n        </Suspense>\n    );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    .use(initReactI18next)\n    .use(Backend)\n    .use(LanguageDetector)\n    .init({\n        fallbackLng: 'zh',\n        debug: false,\n        interpolation: {\n            escapeValue: false,\n        },\n    }).then();\n\nexport default i18n;\n","import {configureStore} from '@reduxjs/toolkit';\nimport typeReducer from './themeType'\n\nexport default configureStore({\n    reducer: {\n        type: typeReducer,\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './i18n'\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}